git remote add origin https://github.com/LL8054/datasciencecoursera.git
git remote add origin https://github.com/LL8054/datasciencecoursera.git
git push -u origin master
git remote add origin https://github.com/LL8054/datasciencecoursera.git
git push -u origin master
## This is a markdown file
git remote add origin https://github.com/LL8054/datasciencecoursera.git
git push -u origin master
git remote add origin https://github.com/LL8054/datasciencecoursera.git
git push -u origin master
q()
install.packages("KernSmooth"")
library(kernsmooth)
library("KernSmooth", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library(swirl)
swirl()
swirl()
head(flags)
dim(flags)
viewinfo()
class(flags)
cls_list <- lapply(flags,class)
cls_lis
cls_list
class(cls_list)
cls_list
as.character(cls_list)
cls_vect <- sapply(flags,class)
class(cls-vect)
class(cls_vect)
sum(flag$orange)
sum(flags$orange)
flag_colors <- flags[,11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors,sum)
sapply(flag_colors, mean)
flag_shapes <- [,19:23]
flag_shapes <- flags[,19:23]
lapply(flag_shapes,range)
sapply(flag_shapes,range)
shape_mat <- sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,5,5,5,6,6,6))
unique(c(3,4,5,5,5,6,6,))
unique(c(3,4,5,5,5,6,6))
lapply(flags,unique)
unique_ vals <- lapply(flags,unique)
unique_vals <- lapply(flags,unique)
unique_vals
sapply(unique_vals,length)
sapply(flags,unique)
lapply(unique_vals, function(elem elem[2]))
lapply(unique_vals, function(elem) elem[2]))
lapply(unique_vals, function(elem) elem[2])
sapply(flags,unique)
vapply(flags,unique,numeric)1))
ok()
sapply(flags,class)
vapply(flags,class,character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmasses, summary)
tapply(flags$population, flags$landmass, summary)
exit
bye()
library(datasets)
datasets(iris)
data(iris)
?iris
iris
tapply(sepal.length, species, mean)
tapply(Sepal.Length, Species, mean)
tapply(iris, Sepal.Length, Species, mean)
tapply(iris, Sepal.Length, mean)
tapply(iris$sepal.length, iris$species, mean)
tapply(iris$Speal.Length, iris$Species, mean)
tapply(iris$Sepal.Length, iris$Species, mean)
apply(iris[1:4]1, mean)
apply(iris[1:4],1, mean)
apply(iris[1:4],2, mean)
?apply
apply(iris[,1:4],2, mean)
apply(iris, 2, mean)
apply(iris,1,mean)
library(datasets)
data(mtcars)
?mtcars
head(mtcars)
tapply(mtcars$mpg,mtcars$cyl,mean)
tapply(mtcars$hp,mtcars$cyl,mean)
[tapply(mtcars$hp,mtcars$cyl,mean),1] - [tapply(mtcars$hp,mtcars$cyl,mean),3]
i <- tapply(mtcars$mpg,mtcars$cyl,mean)
i
i[3]-i[1]
tapply(mtcars$hp,mtcars$cyl,mean),[1] - tapply(mtcars$hp,mtcars$cyl,mean),[3]
tapply(mtcars$hp,mtcars$cyl,mean)[1] - tapply(mtcars$hp,mtcars$cyl,mean)[3]
tapply(mtcars$hp,mtcars$cyl,mean)[3]
rm(i)
i
i <- tapply(mtcars$hp, mtcars$cyl, mean)
i
i[3] - i[1]
tapply(mtcars$hp, mtcars$cyl, mean)[3] - tapply(mcars$hp, mtcars$cyl, mean)[1]
tapply(mtcars$hp, mtcars$cyl, mean)[3] - tapply(mtcars$hp, mtcars$cyl, mean)[1]
debug(ls)
ls
debug(ls)
ls(2)
bye()
exit
close
close()
exit()
quit()
quit
quit
library("swirl")
swirl()
quit9)
quit()
install.packages("RMySQL")
Sys.setenv(PKG_CPPFLAGS = "-I/usr/local/include/mysql")
Sys.setenv(PKG_LIBS = "-L/usr/local/lib -lmysqlclient")
install.packages("RMySQL", type = "source")
library(RMySQL)
library(DBI)
library(RMySQL)
example(points)
?gl
?par
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
p
?splom
?print.trellis()
?plom
?splom
?trellis.par.set
?par
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
install.packages("ggplot2")
library(ggplot2)
install.packages("lattice")
install.packages("lattice")
install.packages("lattice")
install.packages("lattice")
install.packages("lattice")
install.packages("lattice")
library("lattice")
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
movies
str(movies)
g
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
summary(g)
g + geom_point()
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies) + geom(smooth)
qplot(votes, rating, data = movies) + geom_smooth()
?llines()
?axis
?llines()
install.packages("myplclust")
library(myplclust)
install.packages("rcolorbrewer")
install.packages("RColorBrewer")
library(RColorBrewer)
knit2html("PA1_template.Rmd")
library(knitr)
knit2html("PA1_template.Rmd")
setwd("~/datasciencecoursera/Courses/ReproducibleResearch/RepData_PeerAssessment1")
knit2html("PA1_template.Rmd")
